name: release-native

on:
  push:
    tags:
      - "v*.*.*"

env:
  EXECUTABLE_NAME: game

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version-tag.outputs.VERSION }}
    steps:
      - name: Get tagged version
        id: version-tag
        run: echo "::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}"
      
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - app-ext: 
          - os: windows-latest
            app-ext: .exe
    needs: setup
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-stable-${{ hashFiles('**/Cargo.toml') }}
      - name: Install alsa and udev
        run: sudo apt-get update --fix-missing; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
        if: runner.os == 'linux'
      - name: Build
        run: |
          cd ./launchers/native
          cargo build --release
      - name: Rename
        run: |
          mv ./target/release/native-launcher${{ matrix.app-ext }} ./${{ env.EXECUTABLE_NAME }}${{ matrix.app-ext }}
      - name: Zip release
        uses: vimtor/action-zip@v1
        with:
          files: assets/ ./${{ env.EXECUTABLE_NAME }}${{ matrix.app-ext }}
          recursive: false
          dest: ./build-${{ needs.setup.outputs.version }}-${{ runner.os }}.zip
      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          files: ./build-${{ needs.setup.outputs.version }}-${{ runner.os }}.zip
#  release-wasm:
#    needs: setup
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Install Trunk
#        uses: jetli/trunk-action@v0.1.0
#        with:
#          version: "latest"
#      - name: Trunk Build
#        run: |
#          trunk build --release --public-url ${{ env.PUBLIC_URL }}
#      - name: Deploy, Github Pages
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./launchers/wasm/dist/
